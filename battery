#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;

my $color;
my $acpi;
my $acpi_charging;
my $ntf;
my $status;
my $charging;
my $percent;
my $full_text;
my $short_text;
my $red;
my $green;
my $blue;
my $max_red;
my $max_red_r;
my $max_red_g;
my $max_red_b;
my $max_green;
my $max_green_r;
my $max_green_g;
my $max_green_b;
my $step_r;
my $step_g;
my $step_b;
my $bat_number = $ENV{BLOCK_INSTANCE} || 0;

# read the first line of the "acpi" command output
open (ACPI, "acpi -b | grep 'Battery $bat_number' |") or die;
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}

$status = $1;
$percent = $2;
$full_text = "$percent%";
if ($status eq 'Full' | $status eq 'Unknown'){
    $full_text ="";
}

#if ($status eq 'Discharging') {
#	$full_text .= ' DIS';
#} elsif ($status eq 'Charging') {
#	$full_text .= ' CHR';
#}

$short_text = $full_text;

#if ($acpi =~ /(\d\d:\d\d):/) {
#	$full_text .= " ($1)";
#}
if ($percent < 20) {
	$full_text = '' . ' ' .$full_text;
} elsif ($percent < 40) {
	$full_text = '' . ' ' .$full_text;
} elsif ($percent < 60) {
	$full_text = '' . ' ' .$full_text;
} elsif ($percent < 80) {
	$full_text = '' . ' ' .$full_text;
} else {
	$full_text = '' . ' ' .$full_text;
}
#
open (ACPI2, "acpi -V | grep 'Adapter' | awk '{print \$3}' | tr -d '\n' |") or die;
$acpi_charging = <ACPI2>;
close(ACPI2);

$charging = 0;
if ( ($status eq 'Charging' ) && $percent != 100) {
    $charging = 1;
    $full_text = ' ' . $full_text;
}

# consider color and urgent flag only on discharge
if ($status eq 'Discharging' || $charging == 0) {
    $max_red = "#c22330";
    $max_green = "#19a85b";
    $max_red_r = hex(substr $max_red, 1, 2);
    $max_red_g = hex(substr $max_red, 3, 2);
    $max_red_b = hex(substr $max_red, 5, 2);
    $max_green_r = hex(substr $max_green, 1, 2);
    $max_green_g = hex(substr $max_green, 3, 2);
    $max_green_b = hex(substr $max_green, 5, 2);
    $step_r = ($max_green_r - $max_red_r) / 100;
    $step_g = ($max_green_g - $max_red_g) / 100;
    $step_b = ($max_green_b - $max_red_b) / 100;

    $red = int( $max_red_r + ( $percent * $step_r ) );
	$red = sprintf("%02X", $red);
    $green = int( $max_red_g + ( $percent * $step_g ) );
	$green = sprintf("%02X", $green);
    $blue = int( $max_red_b + ( $percent * $step_b ) );
	$blue = sprintf("%02X", $blue);

	$color = "#" . $red . $green . $blue;
}

if ($status eq 'Charging' ) {
    $color = "#f9dc2b";
}
if ($status eq 'Full'){
    $color = "#19a85b";
}
print "%{F" . $color . "}" . $full_text . "%{F-}";

exit(0);
